/*
 * Title - Common JS for entire project
 * Description - this js using for all common method for global.
 * Author - Jayanta Rakshit
 * Year - (c) 2018
 * Licence - nil
 */
!function ($) {
    "use strict";
    var BASEURL = window.location.origin;

    /***************************************
     * Title - Check is Valid file or not
     * Access - Private
     * Parameter - File, Filetype
     * Return - true/false
     * Syntax - isValidFileExtension(file, filetype);
     ***************************************/
    var isValidFileExtension = function (file, filetype) {
        var _isValid = false;
        if (typeof file === "object" && typeof filetype === "object") {
            if (file.files && file.files[0]) {
                var _fileData = file.files[0];
                var _fileName = _fileData.name;
                var _fileSplitArray = _fileName.split(".");
                var _fileExtension = _fileSplitArray[_fileSplitArray.length - 1];
                if ($.inArray(_fileExtension, filetype) != -1)
                {
                    _isValid = true;
                }
                else
                {
                    $(file).val("");
                }
            }
        }
        return _isValid;
    }

    /***************************************
     * Title - Check value is Null or Empty
     * Access - Private
     * Parameter - value
     * Return - true/false
     * Syntax - isNUllorEmpty(val);
     ***************************************/
    var isNUllorEmpty = function (val) {
        var _s = false;
        //return (val.trim() > 0 || val.trim() != null || val.trim() != "" || val.trim() != "null") ? true : false;
        switch (val) {
            case "0": { _s = true; } break;
            case "": { _s = true; } break;
            case 0: { _s = true; } break;
            case undefined: { _s = true; } break;
            case "undefined": { _s = true; } break;
            case null: { _s = true; } break;
            case "null": { _s = true; } break;
            case "NaN": { _s = true; } break;
            case NaN: { _s = true; } break;
        }
        return _s;
    };
    
    /***************************************
     * Title - Collect URL Param 
     * Access - Private
     * Parameter - value
     * Return - true/false
     * Syntax - isNUllorEmpty(val);
     ***************************************/
    var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
    };

    /***************************************
     * Title - Get BASEURL 
     * Access - Public
     * Parameter - extend URL
     * Return - url
     * Syntax - $.baseurl(url);
     ***************************************/
    $.baseurl = function (url) {
        var _baseURL = BASEURL;
        if (!$.isNull(url)) {
            _baseURL = _baseURL + "/" + url;
            if ($.validregex(_baseURL, "url")) {
                return _baseURL;
            } else {
                throw new "valid url should be required."
            }
        } else {
            return _baseURL;
        }
    };

    /***************************************
     * Title - Check value is Null or Empty
     * Access - Public
     * Parameter - value
     * Return - true/false
     * Syntax - $.isNull(value);
     ***************************************/
    $.isNull = function (value) {
        return isNUllorEmpty(value);
    };

    /***************************************
     * Title - Redirect one url to another url
     * Access - Public
     * Parameter - URL
     * Return - null
     * Syntax - $.redirect();
     ***************************************/
    $.redirect = function (url) {
        url = typeof url === 'undefined' ? "" : url;
        if ($.validregex(url, "url")) {
            window.location.href = url;
        } else {
            throw "Invalid URL !!!"
        }
    }

    /***************************************
     * Title - Check your string with regex
     * Access - Public
     * Parameter - value, type
     * Return - true/false
     * Syntax - $.validregex(val, type);
     ***************************************/
    $.validregex = function (val, type) {
        var isvalid = false;
        var regex;
        switch (type.toLowerCase()) {
            case "url": {
                regex = new RegExp("^(http|https)?:\/\/[a-zA-Z0-9-\.]+\.[a-z]{2,4}", "g");
                isvalid = regex.test(val);
            } break;
            case "mobile": {
                regex = new RegExp("^[0-9-+]{10}$");
                isvalid = regex.test(val);
            } break;
            case "email": {
                regex = new RegExp("^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$", "ig");
                isvalid = regex.test(val);
            } break;
            case "alpha": {
                regex = new RegExp("^[a-zA-Z]+$", "ig");
                isvalid = regex.test(val);
            } break;
            case "alphanumeric": {
                regex = new RegExp("[^a-zA-Z0-9 ]", "ig");
                isvalid = regex.test(val);
            } break;
        }
        return isvalid;
    }

    /***************************************
     * Title - Check your string if bool
     * Access - Public
     * Parameter - string
     * Return - true/false
     * Syntax - $.parseBool(str);
     ***************************************/
    $.parseBool = function (str) {
        return /^true$/i.test(str);
    }

    /***************************************
     * Title - Collect FromData of HTML form
     * Access - Public
     * Parameter - Form Id
     * Return - FormData
     * Syntax - $.formdata("#formid");
     ***************************************/
    $.formdata = function (formid) {
        var $form;
        if (isNUllorEmpty(formid)) {
            $form = new FormData($("<form></form>")[0]);
        } else {
            $form = new FormData($(formid)[0]);
        }
        return $form;
    }

    /***************************************
     * Title - HTML form reset
     * Access - Public
     * Parameter - Form Id
     * Return - null
     * Syntax - $.formreset("#formid");
     ***************************************/
    $.formreset = function (formid) {
        if (!isNUllorEmpty(formid)) {
            $(formid).trigger("reset");
        }
    }

    /***************************************
     * Title - Collect Project Mapping Sys Id Value
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected PM id
     * Syntax - $.urlsegment(2);
     ***************************************/
    $.urlsegment = function (index) {
        var QueryParameter = window.location.pathname.split("/");
        var indexName = "";
        if (!isNUllorEmpty(parseInt(index)) && !isNaN(parseInt(index))) {
            if (QueryParameter.length >= index) {
                indexName = QueryParameter[index];
            } else {
                throw 'URL index out of range';
            }
        } else {
            throw 'URL index value is invalid.';
        }
        return indexName;
    }

    /***************************************
     * Title - Collect Controller name from URL
     * Access - Public
     * Parameter - null
     * Return - URL First Parameter according to Index
     * Syntax - $.getcontrollername();
     ***************************************/
    $.getcontrollername = function () {
        var QueryParameter = window.location.pathname.split("/");
        var indexName = "";
        if (QueryParameter.length >= 1) {
            indexName = QueryParameter[1];
        } else {
            throw 'Controller name is missing';
        }
        return indexName;
    }

    /***************************************
     * Title - Collect Action name from URL
     * Access - Public
     * Parameter - null
     * Return - URL Second Parameter according to Index
     * Syntax - $.getactionname();
     ***************************************/
    $.getactionname = function () {
        var QueryParameter = window.location.pathname.split("/");
        var indexName = "";
        if (QueryParameter.length >= 2) {
            indexName = QueryParameter[2];
        } else {
            throw 'Action name is missing';
        }
        return indexName;
    }

    /***************************************
     * Title - Collect Project Mapping Sys Id Value
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected PM id
     * Syntax - $.GetPmId("projectmapid");
     ***************************************/
    $.getpmid = function (e) {
        var idName;
        var pmId = 0;
        idName = (e != null) ? e : "csrpmid";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                pmId = $this.val();
            }           
        }
        return pmId;
    };

    /***************************************
     * Title - Collect FY Id Value
     * Parameter - input/select Id (Optional)
     * Return - selected finacial id
     * Syntax - $.GetFyId("fy_list");
     ***************************************/
    $.getfyid = function (e) {
        var idName;
        var fyid = 0;
        idName = (e != null) ? e : "fy_list";
        var $this = $("#" + idName);
        if ($this.length > 0) {            
            if ($this.val() > 0) {
                fyid = $this.val();
            }            
        }
        return fyid;
    };

    /***************************************
     * Title - Collect Location Value
     * Parameter - input/select Id (Optional)
     * Return - selected Location id
     * Syntax - $.GetLocationId("Location_list");
     ***************************************/
    $.getlocationid = function (e) {
        var idName;
        var location_id = 0;
        idName = (e != null) ? e : "Location_list";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                location_id = $this.val();
            }            
        }
        return location_id;
    };

    /***************************************
     * Title - Collect Partner Value
     * Parameter - input/select Id (Optional)
     * Return - selected Partner id
     * Syntax - $.GetPartnerId("Partner_list");
     ***************************************/
    $.getpartnerid = function (e) {
        var idName, alterid;
        var partner_id = 0;
        idName = (e != null) ? e : "Partner_list";
        var $this = $("#" + idName);
        if ($this.length > 0) {            
            if ($this.val() > 0) {
                partner_id = $this.val();
            }
        } else {
            var $this = $("#orgid");
            if ($this.val() > 0) {
                partner_id = $this.val();
            }
        }
        return partner_id;
    };

    /***************************************
     * Title - Collect Program Value
     * Parameter - input/select Id (Optional)
     * Return - selected Program id
     * Syntax - $.GetPartnerId("Program_list");
     ***************************************/
    $.getprogramid = function (e) {
        var idName;
        var program_id = 0;
        idName = (e != null) ? e : "Program_list";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                program_id = $this.val();
            }            
        }
        return program_id;
    };

    /***************************************
     * Title - Collect Project Value
     * Parameter - input/select Id (Optional)
     * Return - selected Project id
     * Syntax - $.GetProjectId("Project_list");
     ***************************************/
    $.getprojectid = function (e) {
        var idName;
        var project_id = 0;
        idName = (e != null) ? e : "Project_list";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                project_id = $this.val();
            }            
        }
        return project_id;
    };

    /***************************************
     * Title - Collect User Value
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected User id
     * Syntax - $.GetUserId("csruserid");
     ***************************************/
    $.getuserid = function (e) {
        var idName;
        var userId = 0;
        idName = (e != null) ? e : "csruserid";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                userId = $this.val();
            }            
        }
        return userId;
    };

    /***************************************
     * Title - Collect Role Value
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected Role id
     * Syntax - $.GetRoleId("csrroleid");
     ***************************************/
    $.getroleid = function (e) {
        var idName;
        var role_id = 0;
        idName = (e != null) ? e : "csrroleid";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                role_id = $this.val();
            }            
        }
        return role_id;
    };

    /***************************************
     * Title - Collect Profile Value
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected Profile id
     * Syntax - $.GetProfileId("csrproid");
     ***************************************/
    $.getprofileid = function (e) {
        var idName;
        var profile_id = 0;
        idName = (e != null) ? e : "csrproid";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                profile_id = $this.val();
            }            
        }
        return profile_id;
    };

    /***************************************
     * Title - Collect User Type Id
     * Access - Public
     * Parameter - input/select Id (Optional)
     * Return - selected User Type id
     * Syntax - $.getusertype("csrtypeid");
     ***************************************/
    $.getusertype = function (e) {
        var idName;
        var usertype = 0;
        idName = (e != null) ? e : "csrtypeid";
        var $this = $("#" + idName);
        if ($this.length > 0) {
            if ($this.val() > 0) {
                usertype = $this.val();
            }            
        }
        return usertype;
    };

    /***************************************
     * Title - Collect URL Parameter value
     * Access - Public
     * Parameter - Paramter name
     * Return - Parameter Value
     * Syntax - $.urlparameter(parametername);
     ***************************************/
    $.urlparameter = function (parametername) {
        if (!isNUllorEmpty(parametername)) {
            return getUrlParameter(parametername);
        } else {
            return "";
        }       
    }

    /***************************************
     * Title - Check is Valid file or not
     * Access - Public
     * Parameter - File, Type
     * Return - true/false
     * Syntax - $.isValidFile(File, Type);
     ***************************************/
    $.isValidFile = function (File, Type) {
        return isValidFileExtension(File, Type);
    }
    //*************************************************importing
    var mouListBind = function (e) {
        if (isNUllorEmpty(e)) {
            $.ajax({
                url: BASEURL + "/api/get-mou-project-plan/" + e,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    if (data.status) {
                        $('#mouBodyData').html("");
                        $.each(data.response, function (index, item) {
                            var targetBtn = (item.TYPE.toLowerCase() === "target") ? '<a href="javascript:void(0);" class="MouTargetConfigure" data-planid="' + item.MOU_PROJECT_PLAN_SYS_ID + '"><i class="material-icons col-purple" title="Value Configure">note_add</i></a>' : "";
                            /* table body bind */
                            var eachrow = "<tr>"
                                        + "<td align=center>" + item.INDICATORNAME + "</td>"
                                        + "<td align=center>" + item.PARAMETERNAME + "</td>"
                                        + "<td align=center>" + item.TYPE + "</td>"
                                        + "<td align=center>" + item.APR + "</td>"
                                        + "<td align=center>" + item.MAY + "</td>"
                                        + "<td align=center>" + item.JUN + "</td>"
                                        + "<td align=center>" + item.JUL + "</td>"
                                        + "<td align=center>" + item.AUG + "</td>"
                                        + "<td align=center>" + item.SEP + "</td>"
                                        + "<td align=center>" + item.OCT + "</td>"
                                        + "<td align=center>" + item.NOV + "</td>"
                                        + "<td align=center>" + item.DEC + "</td>"
                                        + "<td align=center>" + item.JAN + "</td>"
                                        + "<td align=center>" + item.FEB + "</td>"
                                        + "<td align=center>" + item.MAR + "</td>"
                                        + "<td align=center>" + item.TOTAL + "</td>"
                                        + "<td align=center>" + item.UNITNAME + "</td>"
                                        + "<td align=center>" + targetBtn + "</td>"
                                        + "</tr>";
                            $('#mouBodyData').append(eachrow);
                        });

                    }
                },
                error: function (errorResponse) {
                    alert(errorResponse.response);
                }
            });
        }
        else {
            console.log("error");
        }
    };

    var OutcomeTabledataBind = function (e) {
        if (isNUllorEmpty(e)) {
            var $TableBody = $("#tbodyoutcome");
            $.ajax({
                url: BASEURL + "/api/get-mou-outcome-data/" + e,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    if (data.status) {
                        $TableBody.html("");
                        $.each(data.response, function (index, item) {
                            /* table body bind */
                            var eachrow = "<tr>"
                                        + "<td align=center>" + item.INDICATOR_NAME + "</td>"
                                        + "<td align=center>" + item.ADDITIONALINFO + "</td>"
                                        + "<td align=center>" + item.UNITNAME + "</td>"
                                        + "<td align=center>" + item.DESIRED + "</td>"
                                        + "<td align=center>" + item.BASELINEPREVIOUSFYVAL + "</td>"
                                        + "<td align=center>" + item.CURRENTYEARTARGETIMPROVEVAL + "</td>"
                                        + "<td align=center>" + item.CURRENTYRTARGETVAL + "</td>"
                                        //+ "<td align=center>" + item.TARGETACHIEVEVAL + "</td>"
                                        + "<td align=center>" + item.REMARKS + "</td>"
                                        + "</tr>";
                            $TableBody.append(eachrow);
                        });

                    }
                },
                error: function (errorResponse) {
                    alert(errorResponse.response);
                }
            });
        }
        else {
            console.log("error");
        }
    };

    var ScheduleTabledataBind = function (e) {
        var _tbody = $('#tbody');
        var _tfoot = $('#tfoter');
        $.ajax({
            type: 'GET',
            url: BASEURL + '/api/get-payment-schedule-view/' + e,
            dataType: "json",
            success: function (result) {
                /* if return success */
                if (result.status == true) {
                    var sum_installment_percentage = 0;
                    var sum_installment_amount = 0;
                    var FY_VAL = "";
                    _tbody.html("");
                    $.each(result.response, function (index, item) {
                        /* table body bind */
                        var eachrow = "<tr>"
                                    + "<td align=center>" + item.INSTALLMENT_NO + "</td>"
                                    + "<td align=center>" + item.YEAR_VALUE + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_PERCENTAGE + "%" + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_AMOUNT + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_PAYMENTDATE + "</td>"
                                    //+ "<td align=center>" + "Deliverables " + item.INSTALLMENT_NO + "</td>"
                                    + "</tr>";
                        if (FY_VAL === "") {
                            FY_VAL = item.YEAR_VALUE;
                        }

                        sum_installment_percentage += parseFloat(item.INSTALLMENT_PERCENTAGE);
                        sum_installment_amount += parseFloat(item.INSTALLMENT_AMOUNT);

                        _tbody.append(eachrow);
                    });
                    //table footer bind
                    _tfoot.html("");
                    var foterow = "<tr>"
                                + "<td align=center>" + "TOTAL" + "</td>"
                                + "<td align=center>" + FY_VAL + "</td>"
                                + "<td align=center>" + sum_installment_percentage + "%" + "</td>"
                                + "<td align=center>" + parseFloat(sum_installment_amount).toFixed(2) + "</td>"
                                + "<td align=center>" + "Not applicable" + "</td>"
                                //+ "<td align=center>" + "Not applicable" + "</td>"
                                + "</tr>";
                    _tfoot.append(foterow);
                }//if not null
                else if (result.status == false) {
                    console.log("not found");
                }
                else {
                    console.log("error");
                }
            },
            error: function (errorThrown) {
                console.log(errorThrown);
            }
        });
    };

    var DeliverableTableDataBind = function (pm_map_id, org_id) {
        $.ajax({
            type: 'GET',
            url: BASEURL + '/api/get-deliverable-data/' + pm_map_id + '/' + org_id,
            dataType: "json",
            success: function (result) {
                /* if return success */
                if (result.status == true) {
                    $('#deliverableListBodyView').html("");
                    $.each(result.response, function (index, item) {
                        /* table body bind */
                        var eachrow = "<tr>"
                                    + "<td align=center>" + ++index + "</td>"
                                    + "<td align=center>" + item.DELIVERABLE_ITEM + "</td>"
                                    + "<td align=center>" + item.ADDITIONALINFO + "</td>"
                                    + "<td align=center>" + item.UNIT_NAME + "</td>"
                                    + "<td align=center>" + item.TARGET_DATA + "</td>"
                                    + "<td align=center>" + item.TIMELINE + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_NO_1 + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_NO_2 + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_NO_3 + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_NO_4 + "</td>"
                                    + "<td align=center>" + item.INSTALLMENT_NO_5 + "</td>"
                                    + "</tr>";
                        $('#deliverableListBodyView').append(eachrow);
                    });
                }/*if not null*/
                else if (result.status == false) {
                    console.log(result.response);
                }
                else {
                    console.log(result.response);
                }
            },
            error: function (errorThrown) {
                console.log(errorThrown.toString());
            }
        });
    };

   

    /***************************************
     * Title - Collect Project Mapping Sys Id Value
     * Parameter - input/select Id (Optional)
     * Return - selected PM id
     * Syntax - $.GetPmId("projectmapid");
     ***************************************/
    $.getpmid = function (e) {
        var idName;
        var pmId = 0;
        idName = (e != null) ? e : "projectmapid";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                pmId = $this.val();
            }
        }
        return pmId;
    };

    /***************************************
     * Title - Collect FY Id Value
     * Parameter - input/select Id (Optional)
     * Return - selected finacial id
     * Syntax - $.GetFyId("fy_list");
     ***************************************/
    $.getfyid = function (e) {
        var idName;
        var fyid = 0;
        idName = (e != null) ? e : "fy_list";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                fyid = $this.val();
            }
        }
        return fyid;
    };

    /***************************************
     * Title - Collect Location Value
     * Parameter - input/select Id (Optional)
     * Return - selected Location id
     * Syntax - $.GetLocationId("Location_list");
     ***************************************/
    $.getlocationid = function (e) {
        var idName;
        var location_id = 0;
        idName = (e != null) ? e : "Location_list";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                location_id = $this.val();
            }
        }
        return location_id;
    };

    /***************************************
     * Title - Collect Partner Value
     * Parameter - input/select Id (Optional)
     * Return - selected Partner id
     * Syntax - $.GetPartnerId("Partner_list");
     ***************************************/
    $.getpartnerid = function (e) {
        var idName;
        var partner_id = 0;
        idName = (e != null) ? e : "Partner_list";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                partner_id = $this.val();
            }
        }
        return partner_id;
    };

    /***************************************
     * Title - Collect Program Value
     * Parameter - input/select Id (Optional)
     * Return - selected Program id
     * Syntax - $.GetPartnerId("Program_list");
     ***************************************/
    $.getprogramid = function (e) {
        var idName;
        var program_id = 0;
        idName = (e != null) ? e : "Program_list";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                program_id = $this.val();
            }
        }
        return program_id;
    };

    /***************************************
     * Title - Collect Project Value
     * Parameter - input/select Id (Optional)
     * Return - selected Project id
     * Syntax - $.GetProjectId("Project_list");
     ***************************************/
    $.getprojectid = function (e) {
        var idName;
        var project_id = 0;
        idName = (e != null) ? e : "Project_list";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                project_id = $this.val();
            }
        }
        return project_id;
    };

    /***************************************
     * Title - Collect User Value
     * Parameter - input/select Id (Optional)
     * Return - selected User id
     * Syntax - $.GetUserId("csruserid");
     ***************************************/
    $.getuserid = function (e) {
        var idName;
        var userId = 0;
        idName = (e != null) ? e : "csruserid";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                userId = $this.val();
            }
        }
        return userId;
    };

    /***************************************
     * Title - Collect Role Value
     * Parameter - input/select Id (Optional)
     * Return - selected Role id
     * Syntax - $.GetRoleId("csrroleid");
     ***************************************/
    $.getroleid = function (e) {
        var idName;
        var role_id = 0;
        idName = (e != null) ? e : "csrroleid";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                role_id = $this.val();
            }
        }
        return role_id;
    };

    /***************************************
     * Title - Collect Profile Value
     * Parameter - input/select Id (Optional)
     * Return - selected Profile id
     * Syntax - $.GetProfileId("csrproid");
     ***************************************/
    $.getprofileid = function (e) {
        var idName;
        var profile_id = 0;
        idName = (e != null) ? e : "csrproid";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                profile_id = $this.val();
            }
        }
        return profile_id;
    };

    /***************************************
     * Title - Collect User Type Id
     * Parameter - input/select Id (Optional)
     * Return - selected User Type id
     * Syntax - $.getusertype("csrtypeid");
     ***************************************/
    $.getusertype = function (e) {
        var idName;
        var usertype = 0;
        idName = (e != null) ? e : "csrtypeid";
        if ($(document).find(idName)) {
            var $this = $("#" + idName);
            if ($this.val() > 0) {
                usertype = $this.val();
            }
        }
        return usertype;
    };

    /***************************************
     * Title - Role Management 
     * Parameter - Role Id (Optional)
     * Return - selected User Type id
     * Syntax - $.rolemanagement(2);
     ***************************************/
    $.rolemanagement = function (e, planning_status, outcome_status, deliverable_status, payment_status) {
        e = isNUllorEmpty(e) ? e : $.getroleid();
        var _anchorURL = "";
        var _pmId = $.getpmid();
        var _orgId = $.getpartnerid();
        //console.log(e +"- Role "+planning_status + "- planning_status " + outcome_status + "- outcome_status " + deliverable_status + "- deliverable_status " + payment_status + " payment_status ");

        $("#btn_planning_submit").hide();
        $("#btn_planning_approve").hide();
        $("#btn_planning_reject").hide();
        $("#btn_planning_verify").hide();
        $("#btn_planning_change").hide();
        $("#btn_planning_pdf").hide();
        $("#text_comments_planning").hide();
        $("#div_planning").hide().children("label").hide();


        $("#btn_outcome_submit").hide();
        $("#btn_outcome_approve").hide();
        $("#btn_outcome_reject").hide();
        $("#btn_outcome_verify").hide();
        $("#btn_outcome_change").hide();
        $("#btn_outcome_pdf").hide();
        $("#text_comments_outcome").hide();
        $("#div_outcome").hide().children("label").hide();

        $("#btn_deliverable_submit").hide();
        $("#btn_deliverable_approve").hide();
        $("#btn_deliverable_reject").hide();
        $("#btn_deliverable_verify").hide();
        $("#btn_deliverable_change").hide();
        $("#btn_deliverable_pdf").hide();
        $("#text_comments_deliverable").hide();
        $("#div_deliverable").hide().children("label").hide();

        $("#btn_payment_schedule_submit").hide();
        $("#btn_payment_schedule_approve").hide();
        $("#btn_payment_schedule_reject").hide();
        $("#btn_payment_schedule_approve").hide();
        $("#btn_payment_schedule_reject").hide();
        $("#btn_payment_schedule_pdf").hide();
        $("#text_comments_payment_schedule").hide();
        $("#div_payment_schedule").hide().children("label").hide();

        switch (parseInt(e)) {
            case 3: {

                /*Maker*/
                /* 9 open */

                $("#addMonthlyPlanReportBtn").show();
                $("#OutcomeModalOpenBtn").show();
                $("#addNewDeliverableBtn").show();
                $("#add_payment_schedule").show();
                $("#li_initiate").show();

                if (parseInt(planning_status) === 9 || parseInt(planning_status) === 20 || parseInt(planning_status) === 2) {
                    $("#text_comments_planning").show();
                    $("#btn_planning_submit").show();
                    $("#div_planning").show().children("label").show();
                } else if (parseInt(planning_status) === 3) {
                    var _aTag = $("#btn_planning_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outreach-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_planning").show().children("label").hide();
                    $("#addMonthlyPlanReportBtn").hide();
                }

                if (parseInt(outcome_status) === 9 || parseInt(outcome_status) === 20 || parseInt(outcome_status) === 2) {
                    $("#text_comments_outcome").show();
                    $("#btn_outcome_submit").show();
                    $("#div_outcome").show().children("label").show();
                } else if (parseInt(outcome_status) === 3) {
                    var _aTag = $("#btn_outcome_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outcome-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_outcome").show().children("label").hide();
                    $("#OutcomeModalOpenBtn").hide();
                }

                if (parseInt(deliverable_status) === 9 || parseInt(deliverable_status) === 20 || parseInt(deliverable_status) === 2) {
                    $("#text_comments_deliverable").show();
                    $("#btn_deliverable_submit").show();
                    $("#div_deliverable").show().children("label").show();
                } else if (parseInt(deliverable_status) === 3) {
                    var _aTag = $("#btn_deliverable_pdf");
                    _anchorURL = BASEURL + "/projectmapping/deliverable-pdf-download/" + _pmId + "/" + _orgId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_deliverable").show().children("label").hide();
                    $("#addNewDeliverableBtn").hide();
                }

                if (parseInt(payment_status) === 9 || parseInt(payment_status) === 20 || parseInt(payment_status) === 2) {
                    $("#text_comments_payment_schedule").show();
                    $("#btn_payment_schedule_submit").show();
                    $("#div_payment_schedule").show().children("label").show();
                } else if (parseInt(payment_status) === 3) {
                    var _aTag = $("#btn_payment_schedule_pdf");
                    _anchorURL = BASEURL + "/projectmapping/paymentschedule-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_payment_schedule").show().children("label").hide();
                    $("#add_payment_schedule").hide();
                }
            } break;
            case 2: {

                /* Checker */
                /* 8 Insert */
                if (parseInt(planning_status) === 8) {
                    $("#text_comments_planning").show();
                    $("#btn_planning_verify").show();
                    $("#btn_planning_change").show();
                    $("#div_planning").show().children("label").show();
                } else if (parseInt(planning_status) === 3) {
                    var _aTag = $("#btn_planning_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outreach-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_planning").show().children("label").hide();
                }
                if (parseInt(outcome_status) === 8) {
                    $("#text_comments_outcome").show();
                    $("#btn_outcome_verify").show();
                    $("#btn_outcome_change").show();
                    $("#div_outcome").show().children("label").show();

                } else if (parseInt(outcome_status) === 3) {
                    var _aTag = $("#btn_outcome_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outcome-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_outcome").show().children("label").hide();
                }
                if (parseInt(deliverable_status) === 8) {
                    $("#text_comments_deliverable").show();
                    $("#btn_deliverable_verify").show();
                    $("#btn_deliverable_change").show();
                    $("#div_deliverable").show().children("label").show();

                } else if (parseInt(deliverable_status) === 3) {
                    var _aTag = $("#btn_deliverable_pdf");
                    _anchorURL = BASEURL + "/projectmapping/deliverable-pdf-download/" + _pmId + "/" + _orgId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_deliverable").show().children("label").hide();
                }
                if (parseInt(payment_status) === 8) {
                    $("#text_comments_payment_schedule").show();
                    $("#btn_payment_schedule_verify").show();
                    $("#btn_payment_schedule_change").show();
                    $("#div_payment_schedule").show().children("label").show();
                } else if (parseInt(payment_status) === 3) {
                    var _aTag = $("#btn_payment_schedule_pdf");
                    _anchorURL = BASEURL + "/projectmapping/paymentschedule-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_payment_schedule").show().children("label").hide();
                }

            } break;
            case 1: {
                /*Approver*/

                /* 4 - Verified */
                if (parseInt(planning_status) === 4) {
                    $("#text_comments_planning").show();
                    $("#btn_planning_approve").show();
                    $("#btn_planning_reject").show();
                    $("#div_planning").show().children("label").show();
                } else if (parseInt(planning_status) === 3) {
                    var _aTag = $("#btn_planning_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outreach-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_planning").show().children("label").hide();
                }
                if (parseInt(outcome_status) === 4) {
                    $("#text_comments_outcome").show();
                    $("#btn_outcome_approve").show();
                    $("#btn_outcome_reject").show();
                    $("#div_outcome").show().children("label").show();
                } else if (parseInt(outcome_status) === 3) {
                    var _aTag = $("#btn_outcome_pdf");
                    _anchorURL = BASEURL + "/projectmapping/outcome-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_outcome").show().children("label").hide();
                }
                if (parseInt(deliverable_status) === 4) {
                    $("#text_comments_deliverable").show();
                    $("#btn_deliverable_approve").show();
                    $("#btn_deliverable_reject").show();
                    $("#div_deliverable").show().children("label").show();
                } else if (parseInt(deliverable_status) === 3) {
                    var _aTag = $("#btn_deliverable_pdf");
                    _anchorURL = BASEURL + "/projectmapping/deliverable-pdf-download/" + _pmId + "/" + _orgId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_deliverable").show().children("label").hide();
                }
                if (parseInt(payment_status) === 4) {
                    $("#text_comments_payment_schedule").show();
                    $("#btn_payment_schedule_approve").show();
                    $("#btn_payment_schedule_reject").show();
                    $("#div_payment_schedule").show().children("label").show();
                } else if (parseInt(payment_status) === 3) {
                    var _aTag = $("#btn_payment_schedule_pdf");
                    _anchorURL = BASEURL + "/projectmapping/paymentschedule-pdf-download/" + _pmId;
                    _aTag.attr("href", _anchorURL);
                    _aTag.addClass("btn bg-red waves-effect");
                    _aTag.html('<i class="material-icons">picture_as_pdf</i><span>Download as PDF</span>');
                    _aTag.show();
                    $("#div_payment_schedule").show().children("label").hide();
                }
            } break;
        }
    };

    /***************************************
     * Title - Outreach Table Bind
     * Parameter - Project Mapping Sys Id(Numeric)
     * Return - NULL
     * Syntax - $.OutreachTableBind(2);
     ***************************************/
    $.OutreachTableBind = function (pm_id) {
        mouListBind(pm_id);
    };

    /***************************************
     * Title - OutCome Table Bind
     * Parameter - 
     * Return - NULL
     * Syntax - $.OutcomeTableBind(2);
     ***************************************/
    $.OutcomeTableBind = function (pm_id) {
        OutcomeTabledataBind(pm_id);
    };

    /***************************************
     * Title - Payment Schedule Table Bind
     * Parameter - 
     * Return - NULL
     * Syntax - $.PaymentScheduleTableBind(2);
     ***************************************/
    $.PaymentScheduleTableBind = function (pm_id) {
        ScheduleTabledataBind(pm_id);
    };

    /***************************************
     * Title - Deliverable Table Bind
     * Parameter - Project Mapping Id and Organisation Id
     * Return - NULL
     * Syntax - $.DeliverableTableBind(2,29);
     ***************************************/
    $.DeliverableTableBind = function (pm_id, org_id) {
        DeliverableTableDataBind(pm_id, org_id);
    };

    /***************************************
     * Title - Approval Table Bind
     * Parameter - Project Mapping Id
     * Return - NULL
     * Syntax - $.ApprovalTableBind(2);
     ***************************************/
    $.ApprovalTableBind = function (e) {
        var $TableBody = $("#approvalListData");
        //api/get-mou-approvals-data/{PROJECT_MAPPING_SYS_ID}
        if (isNUllorEmpty(e)) {
            $.ajax({
                url: BASEURL + "/api/get-mou-approvals-data/" + e,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    //console.log(data);
                    //return false;
                    if (data.status) {
                        $TableBody.html("");
                        $.each(data.response, function (index, item) {
                            /* table body bind */
                            var eachrow = "<tr>"
                                        + "<td align=center>" + item.ITEM + "</td>"
                                        + "<td align=center>" + item.MAKERNAME + "</td>"
                                        + "<td align=center>" + item.MAKERDATE + "</td>"
                                        + "<td align=center>" + item.CHECKERNAME + "</td>"
                                        + "<td align=center>" + item.CHECKERDATE + "</td>"
                                        + "<td align=center>" + item.APPROVERNAME + "</td>"
                                        + "<td align=center>" + item.APPROVERDATE + "</td>"
                                        + "<td align=center>" + item.STATUS + "</td>"
                                        + '<td align=center><a href="javascript:void(0);" class="showApproverComment" data-checker="' + item.CHECKER_COMMENTS + '" data-maker="' + item.MAKER_COMMENTS + '" data-approver="' + item.APPROVER_COMMENTS + '"><i class="material-icons col-blue-grey">comment</i></a></td>'
                                        + "</tr>";
                            $TableBody.append(eachrow);
                        });

                    }
                },
                error: function (errorResponse) {
                    alert(errorResponse.response);
                }
            });
        }

    }

    /***************************************
    * Title - Status Flag
    * Parameter - Project Mapping Id, Role Id
    * Return - NULL
    * Syntax - $.getmouannexurestatus(2,8);
    ***************************************/
    $.getmouannexurestatus = function (mapid, role_id) {
        $.ajax({
            url: BASEURL + "/api/get-annexure-status-view/" + mapid,
            type: "GET",
            dataType: "json",
            success: function (data) {
                //return false;
                if (data.status) {
                    var outcome_status = data.response[0].OUTCOME_STATUS;
                    var deliverable_status = data.response[0].DELIVERABLE_STATUS;
                    var payment_status = data.response[0].PAYMENT_STATUS;
                    var planning_status = data.response[0].PLANNING_STATUS;
                    //alert(outcome_status + '- outcome_status / ' + deliverable_status + '- deliverable_status / ' + payment_status + '- payment_status / ' + planning_status + '- planning_status');
                    $.rolemanagement(role_id, planning_status, outcome_status, deliverable_status, payment_status);
                }
            }
        });
    }
}(jQuery)